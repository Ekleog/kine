window.SIDEBAR_ITEMS = {"macro":[["assert_writeable_eq","Testing macros for types implementing Writeable. The first argument should be a `Writeable`, the second argument a string, and the third argument (*_parts_eq only) a list of parts (`[(usize, usize, Part)]`)."],["assert_writeable_parts_eq","See [`assert_writeable_eq`]."],["impl_display_with_writeable","Implements `Display` for types that implement [`Writeable`]."]],"struct":[["LengthHint","A hint to help consumers of `Writeable` pre-allocate bytes before they call `write_to`."],["Part","[`Part`]s are used as annotations for formatted strings. For example, a string like `Alice, Bob` could assign a `NAME` part to the substrings `Alice` and `Bob`, and a `PUNCTUATION` part to `, `. This allows for example to apply styling only to names."]],"trait":[["PartsWrite","A sink that supports annotating parts of the string with `Part`s."],["Writeable","`Writeable` is an alternative to `std::fmt::Display` with the addition of a length function."]]};