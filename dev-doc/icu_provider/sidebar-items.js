window.SIDEBAR_ITEMS = {"attr":[["data_struct","The `#[data_struct]` attribute should be applied to all types intended for use in a `DataStruct`."]],"enum":[["FallbackPriority","Hint for what to prioritize during fallback when data is unavailable."],["FallbackSupplement","What additional data to load when performing fallback."]],"macro":[["data_key","See [`DataKey`]."],["impl_casting_upcast","Implements [`UpcastDataPayload`] from several data markers to a single data marker that all share the same `DataMarker::Yokeable`."],["impl_dynamic_data_provider","Implements `DynamicDataProvider` for a marker type `S` on a type that already implements `DynamicDataProvider` or `DataProvider` for one or more `M`, where `M` is a concrete type that is convertible to `S` via [`UpcastDataPayload`]."]],"mod":[["any","Traits for data providers that produce `Any` objects."],["buf","Traits for data providers that produce opaque buffers."],["constructors","üìö This module documents ICU4X constructor signatures."],["dynutil","Utilities for using trait objects with `DataPayload`."],["hello_world","Data provider returning multilingual ‚ÄúHello World‚Äù strings for testing."],["marker","Marker types and traits for DataProvider."],["prelude","Core selection of APIs and structures for the ICU4X data provider."]],"struct":[["Cart","The type of the ‚Äúcart‚Äù that is used by `DataPayload`."],["DataKeyMetadata","Metadata statically associated with a particular [`DataKey`]."],["DataKeyPath","The string path of a data key. For example, ‚Äúfoo@1‚Äù"],["DataRequestMetadata","Metadata for data requests. This is currently empty, but it may be extended with options for tuning locale fallback, buffer layout, and so forth."]]};